var SLDS="object"==typeof SLDS?SLDS:{};SLDS["__internal/chunked/docs/ui/components/dueling-picklist/docs.mdx.js"]=function(e){function t(t){for(var l,s,o=t[0],c=t[1],r=t[2],u=0,m=[];u<o.length;u++)s=o[u],a[s]&&m.push(a[s][0]),a[s]=0;for(l in c)Object.prototype.hasOwnProperty.call(c,l)&&(e[l]=c[l]);for(d&&d(t);m.length;)m.shift()();return n.push.apply(n,r||[]),i()}function i(){for(var e,t=0;t<n.length;t++){for(var i=n[t],l=!0,o=1;o<i.length;o++){var c=i[o];0!==a[c]&&(l=!1)}l&&(n.splice(t--,1),e=s(s.s=i[0]))}return e}var l={},a={31:0},n=[];function s(t){if(l[t])return l[t].exports;var i=l[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=l,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)s.d(i,l,function(t){return e[t]}.bind(null,l));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="/assets/scripts/bundle/";var o=this.webpackJsonpSLDS___internal_chunked_docs=this.webpackJsonpSLDS___internal_chunked_docs||[],c=o.push.bind(o);o.push=t,o=o.slice();for(var r=0;r<o.length;r++)t(o[r]);var d=c;return n.push([204,0]),i()}({0:function(e,t){e.exports=React},18:function(e,t){e.exports=JSBeautify},19:function(e,t){e.exports=ReactDOM},204:function(e,t,i){"use strict";i.r(t),i.d(t,"getElement",(function(){return O})),i.d(t,"getContents",(function(){return v}));var l=i(0),a=i(3),n=i(1),s=i(23),o=i(11),c=i(15),r=i(34),d=(i(81),a.c.a),u=a.c.code,m=a.c.em,h=a.c.h2,b=a.c.h3,p=a.c.h4,g=a.c.li,j=a.c.p,f=a.c.ul,O=function(){return Object(l.createElement)(a.b,{},Object(l.createElement)("div",{className:"doc lead"},"A dueling-picklist is used to move options between two lists and is often referred to as a multi-select. Sometimes, the list options can then be re-ordered, depending on the use case."),Object(l.createElement)(n.a,{exampleOnly:!0},Object(l.createElement)(r.j,{dataSet:r.m,noReorder:!0})),h({id:"About-Dueling-Picklist"},"About Dueling-Picklist"),b({id:"Accessibility"},"Accessibility"),j({},"This component is essentially 2 ARIA listboxes side by side, so we follow the ",d({href:"https://www.w3.org/TR/wai-aria-practices/#Listbox"},"ARIA practices guide")," to help implement their interaction in an accessible way. Some additional details, supplementary to the ARIA guide include:"),p({id:"Markup"},"Markup"),f({},g({},u({},'aria-multiselectable="true"')," should be set on each listbox"),g({},u({},"aria-selected")," should be placed on each ",u({},'role="option"'),", and set to ",u({},"false")," by default"),g({},u({},"aria-labelledby")," is used to identify the list to the user and should point to the list label"),g({},u({},"aria-describedby")," is used to provide operation instructions for the Drag and Drop interaction"),g({},u({},"tabindex"),' should be set to "0" when an item is selected and "-1" otherwise')),p({id:"Focus-Management"},"Focus Management"),f({},g({},"Initially, nothing should be selected and the first item in each list should have ",u({},'tabindex="0"')),g({},"When an item is focused, it becomes selected"),g({},"When focus leaves the list, the last selected item remains selected and focusable. When focus returns to the list focus is placed on the last selected item."),g({},"When moving items:",f({},g({},"With the move button: the items are unselected and added to the target list. The focus should remain on the move button."),g({},"With a keyboard shortcut: focus remains on the item, but in the target list. Since the item is focused, it is also selected."),g({},"If there are already selected items in the target list, they stay selected and the new items are added below them.")))),p({id:"Keyboard-Interactions"},"Keyboard Interactions"),f({},g({},"Each list has a single focusable option inside. There is only ever one focusable option per list and it is expected that a user will use their arrow keys, and some modifier keys, to perform all actions."),g({},"Because we support drag and drop re-ordering within a list, we implement the second multi-select keyboard model.",f({},g({},u({},"up")," and ",u({},"down")," arrows move focus ",m({},"and")," selection, with ",u({},'aria-selected="true"'),". Any previously selected items are deselected."),g({},u({},"shift + up")," and ",u({},"shift + down")," move focus and creates addition selections"),g({},u({},"ctrl + down")," or ",u({},"ctrl + up")," moves focus but selection remains where it is"),g({},u({},"ctrl + space")," toggles selection on the focused option, in addition to previous selections"),g({},u({},"ctrl + a")," selects all options in the list"),g({},u({},"cmd/ctrl + right")," and ",u({},"cmd/ctrl + left")," Moves selected items between lists"),g({},u({},"space"),' toggles "Drag and Drop" mode. When in "Drag and Drop" mode:',f({},g({},u({},"up")," and ",u({},"down")," arrows move the selected items ",m({},"within")," the current list")))))),h({id:"Base"},"Base"),Object(l.createElement)(o.a,{title:"Dueling Picklist with Reorder"},Object(l.createElement)(r.j,{dataSet:r.b})),h({id:"Group-Label"},"Group Label"),j({},"A Dueling Picklist should have a group label, similar to using a ",u({},"fieldset")," and ",u({},"legend")," on grouped form controls. To achieve this, wrap the Dueling Picklist in an ",u({},"slds-form-element")," and add a ",u({},"div")," with the same class names that are applied to a ",u({},"legend")," element in a fieldset, ",u({},"slds-form-element__label slds-form-element__legend"),"."),Object(l.createElement)(c.a,{header:"Labeling the group",type:"a11y"},'It is important that the `slds-form-element` `<div>` has the `role="group"` attribute applied, along with `aria-labelledby`, whose value is the ID of the visible group label.'),Object(l.createElement)(o.a,{title:"Dueling Picklist With Group Label"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.b}))),h({id:"Responsive"},"Responsive"),j({},"To make the dueling picklist responsive or use it within narrow regions, apply the class ",u({},"slds-dueling-picklist__column_responsive")," to the ",u({},"&lt;div&gt;"),"s with class ",u({},"slds-dueling-picklist__column")," that contain options (not the columns that only contain buttons). Any items longer than the space available will truncate with ellipses."),Object(l.createElement)(o.a,{title:"Dueling Picklist Responsive"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.a,noReorder:!0,isResponsive:!0}))),Object(l.createElement)(c.a,{header:"Adjusting Height",type:"note"},"To adjust the height of the listboxes, set the height using an inline style on _both_ of the `<div>`s with class `slds-dueling-picklist__column`. If you are setting it based on a maximum number of items being shown before scrolling, you can set `height = (2.25rem * numItems) + 1rem`."),Object(l.createElement)(s.a,{toggleCode:!1},Object(l.createElement)("div",{className:"slds-dueling-list"},Object(l.createElement)("div",{className:"slds-dueling-list__column"},Object(l.createElement)("span",{className:"slds-form-element__label",id:"label-1"},"Available Languages"),Object(l.createElement)("div",{className:"slds-dueling-list__options",style:{height:"10rem"}},"...")),Object(l.createElement)("div",{className:"slds-dueling-list__column"},"..."),Object(l.createElement)("div",{className:"slds-dueling-list__column"},Object(l.createElement)("span",{className:"slds-form-element__label",id:"label-2"},"Selected Languages"),Object(l.createElement)("div",{className:"slds-dueling-list__options",style:{height:"10rem"}},"...")))),h({id:"Edit-Mode"},"Edit Mode"),j({},"If the user needs to select multiple options for a field, like a list of languages supported, then use a dueling picklist without the re-order arrows on the right."),Object(l.createElement)(c.a,{header:"Helpful Assistive Text",type:"a11y"},"The assistive text content in the `option-drag-label` `<div>` should provide clear instructions on how to drag and drop with a keyboard."),Object(l.createElement)(o.a,{title:"Dueling Picklist"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.a,noReorder:!0}))),b({id:"Selected-Item"},"Selected Item"),Object(l.createElement)(c.a,{header:"Aria Selected",type:"a11y"},Object(l.createElement)("code",null,"aria-selected")," should be placed on each"," ",Object(l.createElement)("code",null,'role="option"'),", and set to"," ",Object(l.createElement)("code",null,"true")," when the item is selected."),Object(l.createElement)(o.a,{title:"Dueling Picklist with Item Selected"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.m,noReorder:!0}))),b({id:"Multiple-Selected-Items"},"Multiple Selected Items"),Object(l.createElement)(o.a,{title:"Dueling Picklist with Multiple Items Selected"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.l,noReorder:!0}))),b({id:"Dropped-Items"},"Dropped Items"),Object(l.createElement)(c.a,{type:"a11y",header:"Aria Live"},'The `drag-live-region` `<div>` with `aria-live="assertive"` should update as items are moved to provide context about the state and location of the items.'),Object(l.createElement)(s.a,{toggleCode:!1},Object(l.createElement)("div",{className:"slds-dueling-list"},Object(l.createElement)("div",{className:"slds-assistive-text",id:"drag-live-region","aria-live":"assertive"},"Arabic and German: Moved to Selected Languages."))),Object(l.createElement)(o.a,{title:"Dueling Picklist with Items Dropped"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.e,noReorder:!0}))),b({id:"Locked-Items"},"Locked Items"),j({},"If items are not able to be removed or reordered from the selected list, a lock icon appears next to the item name."),Object(l.createElement)(c.a,{type:"a11y",header:"Aria Disabled and Assistive Text"},"For each locked item, ",Object(l.createElement)("code",null,'aria-disabled="true"')," must be applied to ",Object(l.createElement)("code",null,".slds-listbox__option")," and assistive text (",Object(l.createElement)("code",null,".slds-assistive-text"),") must be added to"," ",Object(l.createElement)("code",null,".slds-icon_container"),"."),Object(l.createElement)(o.a,{title:"Dueling Picklist with a Locked Item"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.h,noReorder:!0}))),b({id:"With-Reordering"},"With Reordering"),j({},"If the order of the selected options matters, include the vertical arrows to the right. This allows the user to reorder the second listbox of options."),Object(l.createElement)(o.a,{title:"Dueling Picklist with Reoder Active"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.b}))),j({},"The following examples show the process of selecting an item, moving it within a list, and dropping it in a final position."),Object(l.createElement)(c.a,{type:"a11y",header:"Aria Live"},'Pay attention to the `drag-live-region` `<div>` with `aria-live="assertive"`. This should update as items are moved to provide context about the state and location of the items at all times.'),p({id:"Item-Selected"},"Item Selected"),Object(l.createElement)(o.a,{title:"Dueling Picklist with Reoder Active Item Selected"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.n}))),p({id:"Item-Grabbed"},"Item Grabbed"),j({},"Within a list, users are able to drag and drop an item."),Object(l.createElement)(o.a,{title:"Dueling Picklist with Reoder Active Item Grabbed"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.g}))),p({id:"Item-Moved-Within-a-List"},"Item Moved Within a List"),Object(l.createElement)(o.a,{title:"Dueling Picklist with Reoder Active Item Moved within List"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.i}))),p({id:"Item-Dropped-in-a-List"},"Item Dropped in a List"),Object(l.createElement)(o.a,{title:"Dueling Picklist with Reoder Active Item Dropped"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.f}))),b({id:"Disabled"},"Disabled"),j({},"If the user is not able to interact with the dueling picklist, then it should be marked as disabled."),Object(l.createElement)(c.a,{type:"a11y",header:"Aria Disabled"},"In disabled mode, both list boxes"," ",Object(l.createElement)("code",null,"ul[role=listbox]")," should receive"," ",Object(l.createElement)("code",null,'aria-disabled="true"'),", and all directional buttons should receive the ",Object(l.createElement)("code",null,"disabled")," attribute."),Object(l.createElement)(c.a,{type:"note",header:"Utility Class"},"The class ",Object(l.createElement)("code",null,"slds-is-disabled")," should also be applied to the divs with the class"," ",Object(l.createElement)("code",null,"slds-dueling-list_options"),"."),Object(l.createElement)(o.a,{title:"Dueling Picklist Disabled"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.d,disabled:!0}))),b({id:"Required"},"Required"),Object(l.createElement)(o.a,{title:"Dueling Picklist with Required Indicator"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.j,{dataSet:r.b,isRequired:!0}))),b({id:"With-Tooltip"},"With Tooltip"),j({},"If some contextual information regarding the dueling picklist is needed, add a tooltip next to the group label."),Object(l.createElement)(o.a,{title:"Dueling Picklist with Tooltip"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.c,null,Object(l.createElement)(r.j,{dataSet:r.b,hasTooltip:!0,showTooltip:!0})))),b({id:"Required-With-Tooltip"},"Required With Tooltip"),Object(l.createElement)(o.a,{title:"Dueling Picklist with Required Indicator and Tooltip"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.c,null,Object(l.createElement)(r.j,{dataSet:r.b,isRequired:!0,hasTooltip:!0,showTooltip:!0})))),h({id:"View-Mode"},"View Mode"),j({},"When the user is done selecting options, or is in view mode of the field, they are presented with a comma separated list."),Object(l.createElement)(o.a,{title:"Dueling Picklist in View Mode"},Object(l.createElement)(n.a,null,Object(l.createElement)(r.k,null))))},v=function(){return Object(a.a)(O())}}});